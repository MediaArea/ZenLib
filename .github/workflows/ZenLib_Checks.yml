name: Checks

on: [push, pull_request]

jobs:
  Unix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Dependencies
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install automake libtool
          fi
      - name: Configure
        run: |
          cd Project/GNU/Library
          autoreconf -if
          ./configure
      - name: Build
        run: |
          cd Project/GNU/Library
          make
      - name: Check
        run: |
          cd Project/GNU/Library
          make check
      - name: CMake Build
        run: |
          mkdir Project/CMake/Build
          cd Project/CMake/Build
          cmake -DBUILD_ZENLIB=1 ..
          make

  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [ Win32, x64, ARM64 ]
      fail-fast: false
    steps:
    - name: Checkout ZenLib
      uses: actions/checkout@v4
      with:
        path: ZenLib
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - name: Build
      run: msbuild /p:Configuration=Release /p:Platform=${{ matrix.architecture }} ${{ github.workspace }}\ZenLib\Project\MSVC2022\ZenLib_MSVC.sln /verbosity:quiet /warnaserror
